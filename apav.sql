CREATE FUNCTION DBO.SP_MGRID(@EMPID INTEGER, @MGRID INTEGER)
RETURNS INTEGER
BEGIN 
IF(@MGRID IS NULL)
RETURN @EMPID
ELSE
DECLARE @MGR INTEGER
SELECT @MGR = E.MGRID FROM EMP E WHERE E.EMPID = @MGRID
RETURN DBO.SP_MGRID(@MGRID, @MGR)
END
GO
CREATE PROCEDURE SALARYLIMIT AS
DECLARE CURSOR_SAL_LIMIT CURSOR FOR
SELECT EMPID FROM EMP WHERE MGRID IS NULL

DECLARE @CS_MGRID INTEGER
BEGIN 
OPEN CURSOR_SAL_LIMIT
FETCH CURSOR_SAL_LIMIT INTO @CS_MGRID
WHILE (@@FETCH_STATUS = 0)
BEGIN
DECLARE @MAXSAL INTEGER
DECLARE @LIMITSAL INTEGER
IF NOT EXISTS (SELECT 1 FROM LIMITS WHERE MGRID = @CS_MGRID)
BEGIN 
DECLARE @MSG VARCHAR(200)
SELECT @MSG = 'MgeID ' + RTRIM(CONVERT(VARCHAR(20),@CS_MGRID)) + ' (' + RTRIM(NAME) + ') not found in Limits' FROM EMP WHERE EMPID = @CS_MGRID
PRINT @MSG
END
ELSE
BEGIN 
SELECT @MAXSAL = MAX(SALARY) FROM EMP WHERE EMPID IN (
SELECT E.EMPID FROM EMP E WHERE DBO.SP_MGRID(E.EMPID, E.MGRID) = @CS_MGRID)
SELECT @LIMITSAL = SALARYLIMIT FROM LIMITS WHERE MGRID = @CS_MGRID
IF (@LIMITSAL < @MAXSAL)
INSERT INTO LIMITSEXCEEDED VALUES (@CS_MGRID, @MAXSAL, @LIMITSAL)
END
FETCH CURSOR_SAL_LIMIT INTO @CS_MGRID
END 
CLOSE CURSOR_SAL_LIMIT
DEALLOCATE CURSOR_SAL_LIMIT
END